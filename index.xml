<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CaiyiZhang&#39;s Blog</title>
    <link>/</link>
    <description>Recent content on CaiyiZhang&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 23 Jul 2025 01:42:10 +0800</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AboutMe</title>
      <link>/docs/AboutMe/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/AboutMe/</guid>
      <description>&lt;h2 id=&#34;personal-information&#34;&gt;Personal Information&lt;/h2&gt;&#xA;&lt;div style=&#34;margin-top: 40px;&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;/img/avatar.JPG&#34; alt=&#34;我的头像&#34; width=&#34;230&#34; style=&#34;border-radius: 5px; float: left;margin-right: 40px; margin-bottom: 0px;&#34;&gt;&#xD;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hi, it&amp;rsquo;s &lt;strong&gt;Caiyi Zhang&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;I was born in Chongqing in 2000.&lt;/li&gt;&#xA;&lt;li&gt;Enjoy traveling, photography, watching movies, and dancing.&lt;/li&gt;&#xA;&lt;li&gt;B.S. in Software Engineering, &lt;strong&gt;East China Normal University&lt;/strong&gt;, Shanghai.&lt;/li&gt;&#xA;&lt;li&gt;Work as a &lt;strong&gt;Video Engineer at Microsoft&lt;/strong&gt;, where I am responsible for video processing pipeline, including camera capture, encoding, decoding and rendering for Teams app.&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;GitHub&lt;/em&gt;: &lt;a href=&#34;https://github.com/zcy530&#34;&gt;https://github.com/zcy530&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Email&lt;/em&gt;: &lt;a href=&#34;mailto:zhangcaiyii@163.com&#34;&gt;zhangcaiyii@163.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;div style=&#34;clear: both;&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;h2 id=&#34;education-experience&#34;&gt;Education Experience&lt;/h2&gt;&#xA;&lt;h3 id=&#34;east-china-nornal-university---bachelor&#34;&gt;East China Nornal University - Bachelor&lt;/h3&gt;&#xA;&lt;div style=&#34;margin-top: 40px;&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;/img/ECNU.png&#34; alt=&#34;我的头像&#34; width=&#34;230&#34; style=&#34;border-radius: 5px; float: left;margin-right: 40px; margin-bottom: 0px;&#34;&gt;&#xD;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Duration: Sep 2019 - Jun 2023&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;&#xA;&lt;em&gt;&lt;strong&gt;Major&lt;/strong&gt;&lt;/em&gt;: Software Engineering (Subject Assessment A+), GPA: 3.5 / 4.0&lt;br&gt;&#xA;&lt;em&gt;&lt;strong&gt;Main courses&lt;/strong&gt;&lt;/em&gt;:&#xA;Operating System (94/4.0), Computer Network (90/3.9), Algorithm (93/4.0), Data Structure(95/4.0), C++ Programming (95/4.0),  Python (85/3.8), Android development (98/4.0), Python (85/3.8), Advanced Mathematics (90/3.9), Physics (88/3.9)&lt;/p&gt;</description>
    </item>
    <item>
      <title>AboutMe</title>
      <link>/life/AboutMe/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/life/AboutMe/</guid>
      <description>&lt;p&gt;123&lt;/p&gt;</description>
    </item>
    <item>
      <title>Andriod Development</title>
      <link>/docs/andriod-development/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/andriod-development/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.notion.so/Android-studio-Windows-bbd0a66c1ffa478fb3fbffa55b42d078?pvs=21&#34;&gt;Android studio Windows 安装与配置&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.notion.so/Android-Studio-Mac-d20410c14efb4bb68f6ff9834eefb97e?pvs=21&#34;&gt;Android Studio Mac 安装与配置&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;一开始启程&#34;&gt;&lt;strong&gt;一、开始启程&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-认识android&#34;&gt;&lt;strong&gt;1. 认识Android&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Android 大致可以分为4层架构：Linux内核层、系统运行库层、应用框架层和应用层&lt;/p&gt;&#xA;&lt;p&gt;Android系统四大组件分别是Activity、Service、BroadcastReceiver和 ContentProvider&lt;/p&gt;&#xA;&lt;p&gt;Android系统还自带了这种轻量级、运算速度极快的嵌入式关系型数据库， SQLite数据库，它不仅支持标准 的SQL语法，还可以通过Android封装好的API进行操作&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-创建项目&#34;&gt;&lt;strong&gt;2. 创建项目&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210814140038.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Package name&lt;/strong&gt;：表示项目的包名，Android系统就是通过包名来区分不同应用程序的，因此包名一定要具有唯一性&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Language&lt;/strong&gt;：这里默认选择了Kotlin。在过去，Android应用程序只能使用 Java来进行开发，本书的前两个版本也都是用Java语言讲解的。然而在2017年，Google引入 了一款新的开发语言——Kotlin，并在2019年正式向广大开发者公布了Kotlin First的消息&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Minimum API level&lt;/strong&gt;：设置项目的最低兼容版本，Android 5.0以 上的系统已经占据了超过85%的Android市场份额，因此这里我们将Minimum SDK指定成API 21就可以了&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-分析第一个android程序结构&#34;&gt;&lt;strong&gt;3. 分析第一个Android程序结构&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;31-project模式的项目结构&#34;&gt;&lt;strong&gt;3.1 Project模式的项目结构&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210814115516.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;.gradle和.idea&lt;/strong&gt;：放置的都是Android Studio自动生成的一些文件&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;app&lt;/strong&gt;：项目中的代码、资源等内容都是放置在这个目录下的，我们后面的开发工作也基本是在这 个目录下进行的&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;gradle&lt;/strong&gt;：这个目录下包含了gradle wrapper的配置文件，使用gradle wrapper的方式不需要提前将gradle下载好，而是会自动根据本地的缓存情况决定是否需要联网下载gradle。Android Studio默认就是启用gradle wrapper方式的，如果需要更改成离线模式，可以点击Android Studio导航栏→ File → Settings → Build, Execution, Deployment → Gradle，进行配置更改&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;gitignore&lt;/strong&gt;：用来将指定的目录或文件排除在版本控制之外的&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;build.gradle&lt;/strong&gt;：项目全局的gradle构建脚本&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;gradle.properties&lt;/strong&gt;：全局的gradle配置文件&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;gradlew和gradlew.bat&lt;/strong&gt;：用来在命令行界面中执行gradle命令的，其中gradlew是在Linux或Mac系统，gradlew.bat是在Windows系统&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;local.properties&lt;/strong&gt;：指定本机中的Android SDK路径&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;settings.gradle&lt;/strong&gt;：指定项目中所有引入的模块&lt;/p&gt;&#xA;&lt;h3 id=&#34;32-app目录下的结构&#34;&gt;&lt;strong&gt;3.2 app目录下的结构&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210814135811.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;build&lt;/strong&gt;：包含了一些在编译时自动生成的文件&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;libs&lt;/strong&gt;：放置第三方jar包&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android Camera 2</title>
      <link>/docs/android-camera-2/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/android-camera-2/</guid>
      <description>&lt;h1 id=&#34;android-camera-2&#34;&gt;Android Camera 2&lt;/h1&gt;&#xA;&lt;h3 id=&#34;source-code&#34;&gt;Source code&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cs.android.com/android/platform/superproject/main/&amp;#43;/main:frameworks/base/core/java/android/hardware/Camera.java;l=508?q=%22Fail%20to%20connect%20to%20camera%20service%22&#34;&gt;Camera.java - Android Code Search&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;intro&#34;&gt;Intro&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Introduce&lt;/p&gt;&#xA;&lt;p&gt;从 Android 5.0 开始，Google 引入了一套全新的相机框架 Camera2（android.hardware.camera2）并且废弃了旧的相机框架 Camera1（android.hardware.Camera）。基本原因是，camera1 接口过于简单，没法满足更加复杂的相机应用场景。为了给应用层提供更多的相机控制权限，从而构建出更高质量的相机应用程序，Google 才推出了 Camera2 接口&lt;/p&gt;&#xA;&lt;p&gt;看下和 Camera1 比较，Camera2 有哪些高级特性：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在开启相机之前检查相机信息&lt;/li&gt;&#xA;&lt;li&gt;在不开启预览的情况下拍照&lt;/li&gt;&#xA;&lt;li&gt;一次拍摄多张不同格式和尺寸的图片&lt;/li&gt;&#xA;&lt;li&gt;控制曝光时间，灵活的 3A 控制&lt;/li&gt;&#xA;&lt;li&gt;以更快的间隔拍摄图像&lt;/li&gt;&#xA;&lt;li&gt;显示来自多个摄像机的预览&lt;/li&gt;&#xA;&lt;li&gt;直接应用效果和滤镜&lt;/li&gt;&#xA;&lt;li&gt;改进了新硬件的性能。Supported Hardware Level 的概念，不同厂商对 Camera2 的支持程度不同，从低到高有 LEGACY、LIMITED、FULL 和 LEVEL_3 四个级别&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Camera2 API class&lt;/p&gt;&#xA;&lt;p&gt;看下 Camera2 API 涉及到哪些类：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled%201.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Camera2 structure&lt;/p&gt;&#xA;&lt;p&gt;Android Camera 整体框架主要包括三个进程：app 进程、camera server 进程、HAL 进程（provider进程），进程之间的通信都是通过 binder 实现，其中 app 和 camera server 通信使用 AIDL (Android Interface Definition Language) ，camera server 和 hal（provider进程）通信使用 HIDL (HAL interface definition language) 。Android 上面的框架分级，基本都是类似的&lt;/p&gt;</description>
    </item>
    <item>
      <title>C plus plus</title>
      <link>/docs/c-plus-plus/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/c-plus-plus/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;del&gt;C++ 虚函数表&lt;/del&gt;&lt;/li&gt;&#xA;&lt;li&gt;TCP/IP RTP RTCP&lt;/li&gt;&#xA;&lt;li&gt;NV12/NV21 转换的 background&lt;/li&gt;&#xA;&lt;li&gt;C++ 同或异或，数组里唯二的非成对数&lt;/li&gt;&#xA;&lt;li&gt;Media codec 的工作流程&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;提纲&lt;/p&gt;&#xA;&lt;h2 id=&#34;第-1-章c-语言基础&#34;&gt;&lt;strong&gt;第 1 章：C++ 语言基础&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;C++ 发展与 C 语言的区别&lt;/li&gt;&#xA;&lt;li&gt;编译环境搭建（GCC、Clang、MSVC）&lt;/li&gt;&#xA;&lt;li&gt;变量、常量、基本数据类型 (&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;类型转换（隐式与显式转换）&lt;/li&gt;&#xA;&lt;li&gt;运算符与表达式（算术、逻辑、位运算、&lt;code&gt;sizeof&lt;/code&gt;、&lt;code&gt;decltype&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;输入输出（&lt;code&gt;cin&lt;/code&gt;, &lt;code&gt;cout&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-2-章程序控制结构与函数&#34;&gt;&lt;strong&gt;第 2 章：程序控制结构与函数&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;条件语句（&lt;code&gt;if-else&lt;/code&gt;, &lt;code&gt;switch-case&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;循环（&lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do-while&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;goto&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;函数的定义与调用&lt;/li&gt;&#xA;&lt;li&gt;作用域、存储类别（&lt;code&gt;static&lt;/code&gt;、&lt;code&gt;extern&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;递归与内联函数 (&lt;code&gt;inline&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;函数指针&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-3-章数组指针与字符串&#34;&gt;&lt;strong&gt;第 3 章：数组、指针与字符串&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;一维数组、多维数组&lt;/li&gt;&#xA;&lt;li&gt;指针基础（指针变量、指针与数组的关系）&lt;/li&gt;&#xA;&lt;li&gt;动态内存分配 (&lt;code&gt;new/delete&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;std::string&lt;/code&gt; 与 &lt;code&gt;cstring&lt;/code&gt; 操作&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;vector&lt;/code&gt; vs. 传统数组&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;decltype&lt;/code&gt; 与 &lt;code&gt;auto&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-4-章面向对象编程oop&#34;&gt;&lt;strong&gt;第 4 章：面向对象编程（OOP）&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;结构体 (&lt;code&gt;struct&lt;/code&gt;) 与类 (&lt;code&gt;class&lt;/code&gt;) 的区别&lt;/li&gt;&#xA;&lt;li&gt;类与对象的基本概念&lt;/li&gt;&#xA;&lt;li&gt;构造函数、析构函数&lt;/li&gt;&#xA;&lt;li&gt;访问控制（&lt;code&gt;public&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;this&lt;/code&gt; 指针与静态成员 (&lt;code&gt;static&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;友元函数与友元类&lt;/li&gt;&#xA;&lt;li&gt;运算符重载（&lt;code&gt;+&lt;/code&gt;, , &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-5-章继承多态与虚函数&#34;&gt;&lt;strong&gt;第 5 章：继承、多态与虚函数&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;继承的基本概念（基类与派生类）&lt;/li&gt;&#xA;&lt;li&gt;构造函数与析构函数的执行顺序&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;final&lt;/code&gt; 与 &lt;code&gt;override&lt;/code&gt; 关键字&lt;/li&gt;&#xA;&lt;li&gt;虚函数与多态（&lt;code&gt;virtual&lt;/code&gt; 关键字）&lt;/li&gt;&#xA;&lt;li&gt;纯虚函数与抽象类&lt;/li&gt;&#xA;&lt;li&gt;虚函数表 (&lt;code&gt;vtable&lt;/code&gt;) 与 &lt;code&gt;dynamic_cast&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;typeid&lt;/code&gt; 和 &lt;code&gt;RTTI&lt;/code&gt;（运行时类型识别）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-6-章标准模板库stl&#34;&gt;&lt;strong&gt;第 6 章：标准模板库（STL）&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;STL 容器（&lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;deque&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;迭代器 (&lt;code&gt;iterator&lt;/code&gt;) 的使用&lt;/li&gt;&#xA;&lt;li&gt;常见算法（&lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;find&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;std::function&lt;/code&gt; 与 &lt;code&gt;bind&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Lambda&lt;/code&gt; 表达式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-7-章内存管理与智能指针&#34;&gt;&lt;strong&gt;第 7 章：内存管理与智能指针&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;new/delete&lt;/code&gt; 与 &lt;code&gt;malloc/free&lt;/code&gt; 的区别&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;std::unique_ptr&lt;/code&gt;（独占所有权）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;std::shared_ptr&lt;/code&gt;（共享所有权）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;std::weak_ptr&lt;/code&gt;（避免循环引用）&lt;/li&gt;&#xA;&lt;li&gt;RAII（资源获取即初始化）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-8-章多线程编程&#34;&gt;&lt;strong&gt;第 8 章：多线程编程&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;std::thread&lt;/code&gt; 线程的创建与管理&lt;/li&gt;&#xA;&lt;li&gt;线程同步（&lt;code&gt;std::mutex&lt;/code&gt;, &lt;code&gt;std::lock_guard&lt;/code&gt;）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;std::condition_variable&lt;/code&gt;（条件变量）&lt;/li&gt;&#xA;&lt;li&gt;死锁与 &lt;code&gt;std::unique_lock&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;线程池的实现&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-9-章模板编程与高级特性&#34;&gt;&lt;strong&gt;第 9 章：模板编程与高级特性&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;函数模板与类模板&lt;/li&gt;&#xA;&lt;li&gt;模板的特化与偏特化&lt;/li&gt;&#xA;&lt;li&gt;变长模板参数 (&lt;code&gt;template &amp;lt;typename... Args&amp;gt;&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;constexpr&lt;/code&gt;（编译期计算）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;concepts&lt;/code&gt;（C++20 约束概念）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;第-10-章现代-c-特性与实战&#34;&gt;&lt;strong&gt;第 10 章：现代 C++ 特性与实战&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;C++11：&lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;nullptr&lt;/code&gt;, &lt;code&gt;lambda&lt;/code&gt;, &lt;code&gt;move&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;C++14：&lt;code&gt;generic lambda&lt;/code&gt;, &lt;code&gt;return type deduction&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;C++17：&lt;code&gt;if constexpr&lt;/code&gt;, 结构化绑定&lt;/li&gt;&#xA;&lt;li&gt;C++20：协程 (&lt;code&gt;coroutine&lt;/code&gt;)、模块化 (&lt;code&gt;modules&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;std::optional&lt;/code&gt;, &lt;code&gt;std::variant&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;文件操作 (&lt;code&gt;fstream&lt;/code&gt;, &lt;code&gt;ifstream&lt;/code&gt;, &lt;code&gt;ofstream&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;C++ 项目实战（如简易 Web 服务器或线程池）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;1-语言基础&#34;&gt;1. &lt;strong&gt;语言基础&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hello World 基本结构&lt;/p&gt;</description>
    </item>
    <item>
      <title>Compilers Principles</title>
      <link>/docs/compilers-principles/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/compilers-principles/</guid>
      <description>&lt;p&gt;10184602316 张彩仪&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.notion.so/40c319ce10d04572a4502c773b068005?pvs=21&#34;&gt;实验存档&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.notion.so/e0c83c0415e646dca16e83a7a2179298?pvs=21&#34;&gt;实训题目&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;第一章-导论&#34;&gt;&lt;strong&gt;第一章 导论&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;编译技术的发展历史&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;%E7%BC%96%E8%AF%91%E6%8A%80%E6%9C%AF%E7%9A%84%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2%2009a87903ef1e4218878e1120cb447f54.csv&#34;&gt;编译技术的发展历史&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;编译器的各个阶段 ⭐&lt;/p&gt;&#xA;&lt;p&gt;判断编译器和编译系统&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20220827223455.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;第三章-词法分析器&#34;&gt;第三章 词法分析器&lt;/h3&gt;&#xA;&lt;p&gt;lexical analyzer&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;3.1 词法分析器的作用&lt;/p&gt;&#xA;&lt;p&gt;词法分析器是编译的第一阶段，主要任务是读入源程序的输入字符、将他们组成词素（lexeme），生成并输出一个词法单元（token）序列，每个 token 对应一个 lexeme，这个 token 序列被输出到语法分析器进行语法分析&lt;/p&gt;&#xA;&lt;p&gt;第一步：读一个一个的字符&lt;/p&gt;&#xA;&lt;p&gt;第二步：读进来之后把它分割成原来的合法的单词（根本的问题）&lt;/p&gt;&#xA;&lt;p&gt;第三步：合法地存下来，存在符号表 symbol table 里&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20220405155612.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;词法分析器的原理&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;机器和人最大的区别就是它没有前后眼，只有扫描和存储，你让他确定这是不是一个合法的单词，它很难去判断，我们必须要给到词法分析器——什么是合法的单词&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;正则表达式&lt;/strong&gt;：用来告诉机器什么是合法单词的规则&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;有限自动机&lt;/strong&gt;：告诉了机器什么叫合法的单词，机器要识别它。是一个特殊的状态转移图（Transition Diagram）&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;高级程序语言&lt;/strong&gt;：来实现自动机，实现词法分析器&lt;/p&gt;&#xA;&lt;p&gt;词法分析的三个主要元素：&lt;strong&gt;Token Lexeme Pattern&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Token 是一组常见字符串的分类，Pattern 是 Token 形成的规则约束；Lexemes 是实际的源程序里的字符序列，和某个 token 模式匹配，并被词法分析器识别为该 token 的一个实例；还有一个属性叫 Attributes 这个东西在词法分析器里没用，是用于语法分析器的&lt;/p&gt;&#xA;&lt;p&gt;设计token表的时候要根据实际情况，不是唯一的，比如可以用 if 这一个元素作为单独的 token，也可以像 relation 以集合作为一个 token&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20220509161740.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;下面是Token 的简单分类，在很多程序设计语言中，这些类别覆盖了大部分或所有的 token。分类的原因是要有一个简单的规则能把各种各样的 token 说请楚，只有分类才能让每一类的规则说明变得简单&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20220405161321.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;3.2 词法单元的规约&lt;/p&gt;&#xA;&lt;h3 id=&#34;串和语言&#34;&gt;&lt;strong&gt;串和语言&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Alphabet：一个有限的符号结合，例如ASCII、unicode&lt;/p&gt;&#xA;&lt;p&gt;String：该字母表中符号的一个有穷序列&lt;/p&gt;&#xA;&lt;p&gt;Language：某个给定字母表上一个任意可数的 string 的集合。根据这个定义，像空集、进包含空串的集合、所有语法正确的英语句子、所有语法正确的C程序都是语言&lt;/p&gt;</description>
    </item>
    <item>
      <title>Computer Network</title>
      <link>/docs/computer-network/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/computer-network/</guid>
      <description>&lt;h1 id=&#34;计算机网络引言&#34;&gt;计算机网络引言&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;OSI 七层模型&lt;/p&gt;&#xA;&lt;p&gt;OSI参考模型的三个主要概念：服务、协议、接口&lt;/p&gt;&#xA;&lt;p&gt;OSI七层模型（Open System Interconnection）参考模型，是国际标准化组织（ISO）制定的一个用于计算机或通信系统间互联的标准体系。它是一个七层的、抽象的模型体，不仅包括一系列抽象的术语或概念，也包括具体的协议&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Computer%20Network%20ffd4b703f34a46f3bdd48931e955b53a/Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;七层模型传输数据过程：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Computer%20Network%20ffd4b703f34a46f3bdd48931e955b53a/Untitled%201.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;TCP/IP 四层模型&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Computer%20Network%20ffd4b703f34a46f3bdd48931e955b53a/Untitled%202.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;物理层&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;物理层规定:为传输数据所需要的物理链路创建、维持、拆除，而提供具有机械的，电子的，功能的和规范的特性，确保原始的数据可在各种物理媒体上传输，为设备之间的数据通信提供传输媒体及互连设备，为数据传输提供可靠的环境。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据链路层&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;链路控制（同步，异步，二进制，HDLC）&lt;/li&gt;&#xA;&lt;li&gt;差错控制（重发机制）&lt;/li&gt;&#xA;&lt;li&gt;流量控制（窗口机制）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;网络层&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;提供阻塞控制，路由选择（静态路由，动态路由）等&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IP：网际协议。IP协议提供不可靠、无连接的传送服务。IP协议的主要功能有：无连接数据报传输、数据报路由选择和差错控制。IP地址是重要概念&lt;/li&gt;&#xA;&lt;li&gt;ARP：地址解析协议。基本功能就是通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的顺利进行。以太网中的数据帧从一个主机到达网内的另一台主机是根据48位的以太网地址（硬件地址）来确定接口的，而不是根据32位的IP地址。内核必须知道目的端的硬件地址才能发送数据。P2P的连接是不需要ARP的&lt;/li&gt;&#xA;&lt;li&gt;RARP：反向地址转换协议。允许局域网的物理机器从网关服务器的 ARP 表或者缓存上请求其 IP 地址。局域网网关路由器中存有一个表以映射MAC和与其对应的 IP 地址。当设置一台新的机器时，其 RARP 客户机程序需要向路由器上的 RARP 服务器请求相应的 IP 地址。假设在路由表中已经设置了一个记录，RARP 服务器将会返回 IP 地址给机器。&lt;/li&gt;&#xA;&lt;li&gt;IGMP：组播协议包括组成员管理协议和组播路由协议。组成员管理协议用于管理组播组成员的加入和离开，组播路由协议负责在路由器之间交互信息来建立组播树。IGMP属于前者，是组播路由器用来维护组播组成员信息的协议，运行于主机和和组播路由器之间。IGMP 信息封装在IP报文中，其IP的协议号为2&lt;/li&gt;&#xA;&lt;li&gt;ICMP：Internet控制报文协议。用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。&lt;/li&gt;&#xA;&lt;li&gt;BGP: 边界网关协议。处理像因特网大小的网络和不相关路由域间的多路连接。&lt;/li&gt;&#xA;&lt;li&gt;RIP：路由信息协议。是一种分布式的基于距离矢量的路由选择协议。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;传输层&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;提供分割与重组数据，按端口号寻址，连接管理差错控制和流量控制,纠错的功能。传输层要向会话层提供通信服务的可靠性，避免报文的出错、丢失、延迟时间紊乱、重复、乱序等差错。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TCP: 一种面向连接的、可靠的、基于字节流的传输层通信协议。&lt;/li&gt;&#xA;&lt;li&gt;UDP: 用户数据报协议，一种无连接的传输层协议，提供面向事务的简单不可靠信息传送服务。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;应用层&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HTTP：超文本传输协议，基于TCP，是用于从WWW服务器传输超文本到本地浏览器的传输协议。它可以使浏览器更加高效，使网络传输减少&lt;/li&gt;&#xA;&lt;li&gt;SMTP：简单邮件传输协议,是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式&lt;/li&gt;&#xA;&lt;li&gt;SNMP：简单网络管理协议，由一组网络管理的标准组成，包含一个应用层协议、数据库模型和一组资源对象。&lt;/li&gt;&#xA;&lt;li&gt;FTP：文件传输协议，用于Internet上的控制文件的双向传输。同时也是一个应用程序。&lt;/li&gt;&#xA;&lt;li&gt;Telnet：是Internet远程登陆服务的标准协议和主要方式。为用户提供了在本地计算机上完成远程主机工作的能力。在终端使用者的电脑上使用telnet程序，用它连接到服务器&lt;/li&gt;&#xA;&lt;li&gt;SSH：安全外壳协议，为建立在应用层和传输层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议&lt;/li&gt;&#xA;&lt;li&gt;NFS：网络文件系统，是FreeBSD支持的文件系统中的一种，允许网络中的计算机之间通过TCP/IP网络共享资源。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;五层结构&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;应用层&lt;/strong&gt;：为用户的应用进程提供网络通信服务，例如，HTTP协议提供了Web文档的请求和传送，SMTP（邮件传送协议）提供了电子邮件的传送，还有DNS（域名解析协议）将http://202.108.22.5转换为对人友好的www.baidu.com。功能包括提供各种不同的应用协议以满足应用进程的需求，识别并证实目的通信方的可用性，使协同工作的应用进程之间进行同步，为通信过程申请资源&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;传输层&lt;/strong&gt;：为相互通信的应用进程提供了逻辑通信，提供端到端的服务，即主机到主机。负责将应用层的报文向目的地传送，还要确保传输差错控制和流量控制。在因特网中，有两个传输协议，即TCP和UDP，可提供端到端的、可靠的或者不可靠的传输&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;网络层&lt;/strong&gt;：分组选择合适的路由，把分组从从一台主机移动到另一台主机，具体功能包括寻址、路由选择、连接建立、保持和终止等&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;数据链路层&lt;/strong&gt;：将在网络层交下来的数据报组装成帧（frame)，两个相邻结点间的链路实现帧的传输，传输到下一个节点的目的主机的数据链路层又将数据报上传给网络层。功能包括：物理地址寻址、数据的成帧、流量控制、数据的检错、重发等&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;物理层&lt;/strong&gt;：在物理媒介上正确地、透明地传输比特流，在物理层中的协议与链路相关，并且需要确保原始的数据可在各种物理媒体上传输。比如以太网的许多物理层协议有和双绞铜线、同轴电缆、光纤，等等相关&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;第五层-应用层&#34;&gt;第五层 应用层&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HTTP 协议定义&lt;/p&gt;</description>
    </item>
    <item>
      <title>CSS3</title>
      <link>/docs/css3/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/css3/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;绝对定位和相对定位&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/w3cnote/css-position-static-relative-absolute-fixed.html&#34;&gt;CSS position 相对定位和绝对定位 | 菜鸟教程 (runoob.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;绝对定位：absolute 和 fixed 统称为绝对定位&lt;/p&gt;&#xA;&lt;p&gt;相对定位：relative&lt;/p&gt;&#xA;&lt;p&gt;默认值：static&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;relative：相对于原来位置移动，元素设置此属性之后仍然处在文档流中，不影响其他元素的布局&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;position: relative;相对定位：相对定位是相对于元素在文档中的初始位置——首先它出现在它所在的位置上（即不设置position时的位置，然后通过设置垂直或水平位置，让这个元素“相对于”它的原始起点进行移动；&lt;/p&gt;&#xA;&lt;p&gt;注意，在使用相对定位时，无论是否进行移动，元素仍然占据原来的空间。因此，移动元素会导致它覆盖其它框。&lt;/p&gt;&#xA;&lt;p&gt;position: absolute;绝对定位：绝对定位是相对于元素最近的已定位的祖先元素（即是设置了绝对定位或者相对定位的祖先元素）。如果元素没有已定位的祖先元素，那么它的位置则是相对于最初的包含块（body）。&lt;/p&gt;&#xA;&lt;p&gt;绝对定位本身与文档流无关，因此不占空间，普通文档流中的元素的布局就当绝对定位的元素不存时一样，所以 它们可以覆盖页面上其他的元素，且可以通过z-index属性来控制这些层的对方顺序。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;css-基础语法&#34;&gt;CSS 基础语法&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;选择器(元素、id、类、通用)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;元素选择器&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;元素选择器根据元素名称来选择 HTML 元素&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;red&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;id选择器&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;id 选择器使用 HTML 元素的 id 属性来选择特定元素&lt;/p&gt;&#xA;&lt;p&gt;元素的 id 在页面中是唯一的，因此 id 选择器用于选择一个唯一的元素！&lt;/p&gt;&#xA;&lt;p&gt;要选择具有特定 id 的元素，请写一个井号（＃），后跟该元素的 id&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#para1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    text-align:center;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    color:red;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;类选择器&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;class 选择器用于描述一组元素的样式，class 选择器有别于 id 选择器，class 可以在多个元素中使用&lt;/p&gt;&#xA;&lt;p&gt;class 选择器在 HTML 中以 class 属性表示，在 CSS 中，类选择器以一个点 &lt;strong&gt;.&lt;/strong&gt; 号显示&lt;/p&gt;</description>
    </item>
    <item>
      <title>Database Principal</title>
      <link>/docs/database-principal/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/database-principal/</guid>
      <description>&lt;h1 id=&#34;database-principles&#34;&gt;Database Principles&lt;/h1&gt;&#xA;&lt;h3 id=&#34;2-relation-schema&#34;&gt;2 Relation Schema&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;关系型数据库的结构&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;关系&lt;/strong&gt;(relation)：表&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;元组&lt;/strong&gt;(tuple)：行&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;(attribute)：列&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;域&lt;/strong&gt;(domin)：对于关系的每个属性，都存在一个允许取值的集合&lt;/p&gt;&#xA;&lt;p&gt;关系的所有属性的域都是原子的，被看作是不可再分的单元&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;关系模式&lt;/strong&gt;(relation schema)：对于关系结构的抽象描述，由属性序列和各属性对应域组成&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;关系实例&lt;/strong&gt;(relation instance)：一个关系的特定实例&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;关系型数据库码(key)的分类&lt;/p&gt;&#xA;&lt;p&gt;一个关系中没有两个元组在所有属性值上都相等&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;超码&lt;/strong&gt;(super key)：一个或多个属性的集合，可以唯一标识一个元组&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;候选码&lt;/strong&gt;(candidate key) ：最小超码，不包括无关紧要的属性&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;主码&lt;/strong&gt;(primary key)：用来在一个关系中区分不同元组的候选码&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;外码&lt;/strong&gt;(primay key)：一个关系模式 r1 可能在它的属性中包括另一个关系模式 r2 的主码，r1 称为外码依赖的参照关系，r2 称为外码依赖的被参照关系&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;参照性关系&lt;/strong&gt;(referential integrity constraint)：要求在参照关系中任意元组在特定属性上的取值必然等于被参照关系中某个元素在特定属性上的取值&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;关系查询语言&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;过程性语言&lt;/strong&gt;：用户指导系统对数据库执行一系列操作以计算出结果，例如&lt;strong&gt;关系代数&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;非过程性语言&lt;/strong&gt;：只需描述信息不用给出获取信息的具体方法，例如关系演算TRC、域关系演算DRC、&lt;strong&gt;SQL&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;关系代数运算的基本操作&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;选择(select)&lt;/strong&gt; $\sigma$&lt;/p&gt;&#xA;&lt;p&gt;查询满足给定条件的元组（从行的角度）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210609203247041.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;投影(project)&lt;/strong&gt; $\Pi$&lt;/p&gt;&#xA;&lt;p&gt;选出若干属性列组成新的关系（从列的角度）&lt;/p&gt;&#xA;&lt;p&gt;投影之后会取消重复的行&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210609203309795.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;并(union)&lt;/strong&gt; $\cup$&lt;/p&gt;&#xA;&lt;p&gt;先并再去重&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210609202449131.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;交(set intersection)&lt;/strong&gt; $\cap$&lt;/p&gt;&#xA;&lt;p&gt;两个表都有的元组&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210609202504184.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;差(set difference)&lt;/strong&gt; -&lt;/p&gt;&#xA;&lt;p&gt;R 有但 S 没有的关系元组&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;笛卡尔积(Cartesian product)&lt;/strong&gt; ×&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210609202543677.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;自然连接(natural join)&lt;/strong&gt; $\bowtie$&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express</title>
      <link>/docs/express/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/express/</guid>
      <description>&lt;h1 id=&#34;express&#34;&gt;Express&lt;/h1&gt;&#xA;&lt;p&gt;CSDN &lt;a href=&#34;https://blog.csdn.net/weixin_44070254/article/details/118480069&#34;&gt;https://blog.csdn.net/weixin_44070254/article/details/118480069&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;javascript 标准 &lt;a href=&#34;http://javascript.ruanyifeng.com/nodejs/express.html#toc3&#34;&gt;http://javascript.ruanyifeng.com/nodejs/express.html#toc3&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;官网 &lt;a href=&#34;https://www.expressjs.com.cn/starter/hello-world.html&#34;&gt;https://www.expressjs.com.cn/starter/hello-world.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;1-概述&#34;&gt;1. 概述&lt;/h1&gt;&#xA;&lt;p&gt;Express 是目前最流行的基于 Node.js 的 Web 开发框架，可以快速地搭建一个完整功能的网站&lt;/p&gt;&#xA;&lt;p&gt;Express 的本质：就是一个 npm 上的第三方包，提供了快速创建 Web 服务器的便捷方法，使用Express 开发框架可以非常方便、快速的创建 Web 网站的服务器或 &lt;a href=&#34;https://so.csdn.net/so/search?q=API&amp;amp;spm=1001.2101.3001.7020&#34;&gt;API&lt;/a&gt; 接口的服务器&lt;/p&gt;&#xA;&lt;h1 id=&#34;2-hello-world&#34;&gt;2. Hello World&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;下载 express&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Express上手非常简单，首先新建一个项目目录，假定叫做hello-world&lt;/p&gt;&#xA;&lt;p&gt;通过 &lt;code&gt;npm init&lt;/code&gt;  命令为你的应用新建一个package.json文件&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hello-world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hello world test app&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.0.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;private&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s2&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;express&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;4.x&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;install&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;或者&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;save&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;使用 get 方法&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;在项目根目录下，新建一个启动文件，假定叫做server.js&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 监听 3000 端口&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动脚本index.js的&lt;code&gt;app.get&lt;/code&gt;方法，用于指定不同的访问路径所对应的回调函数，这叫做“路由”（routing）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// server.js &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;express&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello world!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/customer&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;customer page&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/admin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;admin page&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;路由封装：&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fast API</title>
      <link>/docs/fast-api/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/fast-api/</guid>
      <description>&lt;h1 id=&#34;fast-api&#34;&gt;Fast API&lt;/h1&gt;&#xA;&lt;h1 id=&#34;配置项目的python环境&#34;&gt;配置项目的python环境&lt;/h1&gt;&#xA;&lt;p&gt;可以 install python 所需的所有环境，不用一个一个的 pip install&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;freeze&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;piplist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;piplist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;txt&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;创建-fastapi&#34;&gt;创建 fastapi&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;fastapi&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FastAPI&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FastAPI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_middleware&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;CORSMiddleware&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;allow_origins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;allow_credentials&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;allow_methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;allow_headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;application/xml&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@app.get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/gettest&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;gettest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@app.post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/posttest&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;posttest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;# 传进 JSON_DATA 注意 尾行不留空格&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;# {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#     &amp;#34;investdate&amp;#34;: &amp;#34;2022-03-04&amp;#34;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#     &amp;#34;weights&amp;#34;:[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#         {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#             &amp;#34;id&amp;#34;: &amp;#34;AMD&amp;#34;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#             &amp;#34;weight&amp;#34;: -0.344&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#         },&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#         {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#             &amp;#34;id&amp;#34;: &amp;#34;AMZN&amp;#34;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#             &amp;#34;weight&amp;#34;: 0.699&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#         },&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#         {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#             &amp;#34;id&amp;#34;: &amp;#34;ZM&amp;#34;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#             &amp;#34;weight&amp;#34;: 0.499&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#         }&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;#     ]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;# }&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 如何处理 json 数据&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;n&#34;&gt;investdate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;investdate&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;weights&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 如何把 json 数组转化成 dict&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;input_weght&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;weight&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;input_weght&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;# 接口里定义的函数 逻辑部分&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;inquirie_for_customer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;investdate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#x9;&#x9;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;return_json&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;c1&#34;&gt;# 如何把结果传回去&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;&#x9;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inquirie_for_customer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;investdate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_weght&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JSONResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;运行-fastapi&#34;&gt;运行 fastapi&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;py&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fastapi_server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;Fast%20API%201118a2a5f576468f9ad750757fd02a1b/Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>FFMpeg</title>
      <link>/docs/ffmpeg/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/ffmpeg/</guid>
      <description>&lt;h1 id=&#34;ffmpeg&#34;&gt;FFMpeg&lt;/h1&gt;&#xA;&lt;p&gt;FFmpeg 是一个强大的多媒体处理工具，支持音视频格式转换、编辑、录制和流媒体处理&lt;/p&gt;&#xA;&lt;h2 id=&#34;download&#34;&gt;Download&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;https://ffmpeg.org/download.html&lt;/a&gt;，下载 &lt;strong&gt;&amp;ldquo;Full&amp;rdquo;&lt;/strong&gt; 版本的 ZIP 文件&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;caiyizhang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Downloads&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;version&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;command&#34;&gt;Command&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;输入选项&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;输入文件&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;输出选项&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;输出文件&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 将 MP4 转换为 AVI&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;avi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 将 MKV 转换为 MP4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkv&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 改变帧率&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 无损转换&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 如果不指定编解码器，FFmpeg 会默认重新编码，可能会损失质量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 压缩视频&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// libx265 使用 H.265 编码，-crf 28 控制质量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;libx265&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crf&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 调整分辨率到 1280x720&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vf&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scale&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1280&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;720&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 裁剪 640x480 居中&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vf&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;crop=640:480:100:50&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 顺时针旋转 90 度&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vf&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;transpose=1&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 剪辑视频&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// -ss 开始时间，-to 结束时间，-c copy 直接剪辑不重新编码&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ffmpeg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ss&lt;/span&gt; &lt;span class=&#34;mo&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;mo&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;00&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mp4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;parameter&#34;&gt;Parameter&lt;/h2&gt;&#xA;&lt;p&gt;FFmpeg 中的 output 参数非常多，但常用的主要涉及 编码器、比特率、分辨率、帧率、音视频流 等方面。以下是常见的 output 选项&lt;/p&gt;</description>
    </item>
    <item>
      <title>Functional Programing</title>
      <link>/docs/functional-programing/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/functional-programing/</guid>
      <description>&lt;h1 id=&#34;一basic&#34;&gt;&lt;strong&gt;一、BASIC&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;11-数据与函数&#34;&gt;&lt;strong&gt;1.1 数据与函数&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;枚举类型&#34;&gt;&lt;strong&gt;枚举类型&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Inductive 定义一个数据集合&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Inductive day : Type :=&#xD;&#xA;  | monday&#xD;&#xA;  | tuesday&#xD;&#xA;  | wednesday&#xD;&#xA;  | thursday&#xD;&#xA;  | friday&#xD;&#xA;  | saturday&#xD;&#xA;  | sunday.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Definition 可以写一些操作函数&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Definition next_weekday (d:day) : day :=&#xD;&#xA;  match d with&#xD;&#xA;  | monday ⇒ tuesday&#xD;&#xA;  | tuesday ⇒ wednesday&#xD;&#xA;  | wednesday ⇒ thursday&#xD;&#xA;  | thursday ⇒ friday&#xD;&#xA;  | friday ⇒ monday&#xD;&#xA;  | saturday ⇒ monday&#xD;&#xA;  | sunday ⇒ monday&#xD;&#xA;  end.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在 Coq 中检验的方式一共有三种：&lt;/p&gt;&#xA;&lt;p&gt;第一，用 Compute 指令来计算包含 next_weekday 的复合表达式&lt;/p&gt;</description>
    </item>
    <item>
      <title>Github Usage</title>
      <link>/docs/github-usage/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/github-usage/</guid>
      <description>&lt;h3 id=&#34;一安装git&#34;&gt;&lt;strong&gt;一、安装git&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;官网下载 git&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;https://git-scm.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择好操作系统和稳定的版本&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled%201.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;双击下载后的 Git-2.37.3-64-bit.exe，开始安装&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled%202.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;配置用户名邮箱和ssh证书&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;安装&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;brew&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;配置账户信息&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;zcy530&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;zhangcaiyii@163.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;配置ssh公钥&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;这里一路空格&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;选择默认设置&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;keygen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rsa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;C&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;zhangcaiyii@163.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;获取公钥&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;复制&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/.ssh/id_rsa.pub&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;github&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;官网找到&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;证书&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;新建&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;把这个公钥复制进去&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;测试&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ssh&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;二远程仓库&#34;&gt;&lt;strong&gt;二、远程仓库&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在 github 里创建一个新的仓库&lt;/p&gt;&#xA;&lt;p&gt;以 test_repository 为例&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210812233931.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;或者使用远程仓库的地址&lt;/p&gt;&#xA;&lt;p&gt;在创建完仓库后，复制它的远程仓库地址，这里使用 HTTP 地址&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210812235122.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;三本地仓库&#34;&gt;&lt;strong&gt;三、本地仓库&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;认识文件的四种状态&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210812233924.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;git init 创建本地仓库&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;创建本地仓库&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;init&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在你想上传的文件夹中空白处右键 -&amp;gt; git bash here&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210812220003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在命令行中输入 &lt;em&gt;git init&lt;/em&gt; 就会看到文件夹当中生成了一个 &lt;em&gt;.git&lt;/em&gt; 的隐藏文件，它所在的文件夹就是仓库，它会记录你所有的变更行为&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210812220022.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;git clone 把远程仓库下载下来&lt;/p&gt;&#xA;&lt;p&gt;把一个repo的项目拷贝到本地，并且连接该仓库&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//github.com/xxx/xxx.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;git remote add origin 连接远程仓库&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTML5</title>
      <link>/docs/html5/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/html5/</guid>
      <description>&lt;h2 id=&#34;html5&#34;&gt;html5&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;html5语义化&lt;/p&gt;&#xA;&lt;p&gt;在HTML5出来之前，我们习惯于用div来表示页面的章节或者不同模块，但是div本身是没有语义的。但是现在，HTML5中加入了一些语义化标签，来更清晰的表达文档结构&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;title&amp;gt;      &amp;lt;!--：页面主体内容。--&amp;gt;&#xD;&#xA;&amp;lt;hn&amp;gt;         &amp;lt;!--：h1~h6，分级标题，&amp;lt;h1&amp;gt; 与 &amp;lt;title&amp;gt; 协调有利于搜索引擎优化。--&amp;gt;&#xD;&#xA;&amp;lt;ul&amp;gt;         &amp;lt;!--：无序列表。--&amp;gt;&#xD;&#xA;&amp;lt;li&amp;gt;         &amp;lt;!--：有序列表。--&amp;gt;&#xD;&#xA;&amp;lt;header&amp;gt;     &amp;lt;!--：页眉通常包括网站标志、主导航、全站链接以及搜索框。--&amp;gt;&#xD;&#xA;&amp;lt;nav&amp;gt;         &amp;lt;!--：标记导航，仅对文档中重要的链接群使用。--&amp;gt;&#xD;&#xA;&amp;lt;main&amp;gt;         &amp;lt;!--：页面主要内容，一个页面只能使用一次。如果是web应用，则包围其主要功能。--&amp;gt;&#xD;&#xA;&amp;lt;article&amp;gt;    &amp;lt;!--：定义外部的内容，其中的内容独立于文档的其余部分。--&amp;gt;&#xD;&#xA;&amp;lt;section&amp;gt;    &amp;lt;!--：定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。--&amp;gt;&#xD;&#xA;&amp;lt;aside&amp;gt;         &amp;lt;!--：定义其所处内容之外的内容。如侧栏、文章的一组链接、广告、友情链接、相关产品列表等。--&amp;gt;&#xD;&#xA;&amp;lt;footer&amp;gt;     &amp;lt;!--：页脚，只有当父级是body时，才是整个页面的页脚。--&amp;gt;&#xD;&#xA;&amp;lt;small&amp;gt;      &amp;lt;!--：呈现小号字体效果，指定细则，输入免责声明、注解、署名、版权。--&amp;gt;&#xD;&#xA;&amp;lt;strong&amp;gt;     &amp;lt;!--：和 em 标签一样，用于强调文本，但它强调的程度更强一些。--&amp;gt;&#xD;&#xA;&amp;lt;em&amp;gt;         &amp;lt;!--：将其中的文本表示为强调的内容，表现为斜体。--&amp;gt;&#xD;&#xA;&amp;lt;mark&amp;gt;       &amp;lt;!--：使用黄色突出显示部分文本。--&amp;gt;&#xD;&#xA;&amp;lt;figure&amp;gt;     &amp;lt;!--：规定独立的流内容（图像、图表、照片、代码等等）（默认有40px左右margin）。--&amp;gt;&#xD;&#xA;&amp;lt;figcaption&amp;gt;&amp;lt;!--：定义 figure 元素的标题，应该被置于 figure 元素的第一个或最后一个子元素的位置。--&amp;gt;&#xD;&#xA;&amp;lt;cite&amp;gt;       &amp;lt;!--：表示所包含的文本对某个参考文献的引用，比如书籍或者杂志的标题。--&amp;gt;&#xD;&#xA;&amp;lt;blockquoto&amp;gt;&amp;lt;!--：定义块引用，块引用拥有它们自己的空间。--&amp;gt;&#xD;&#xA;&amp;lt;q&amp;gt;          &amp;lt;!--：短的引述（跨浏览器问题，尽量避免使用）。--&amp;gt;&#xD;&#xA;&amp;lt;time&amp;gt;       &amp;lt;!--：datetime属性遵循特定格式，如果忽略此属性，文本内容必须是合法的日期或者时间格式。--&amp;gt;&#xD;&#xA;&amp;lt;abbr&amp;gt;       &amp;lt;!--：简称或缩写。--&amp;gt;&#xD;&#xA;&amp;lt;dfn&amp;gt;       &amp;lt;!--：定义术语元素，与定义必须紧挨着，可以在描述列表dl元素中使用。--&amp;gt;&#xD;&#xA;&amp;lt;address&amp;gt;    &amp;lt;!--：作者、相关人士或组织的联系信息（电子邮件地址、指向联系信息页的链接）。--&amp;gt;&#xD;&#xA;    &amp;lt;del&amp;gt;        &amp;lt;!--：移除的内容。--&amp;gt;&#xD;&#xA;&amp;lt;ins&amp;gt;        &amp;lt;!--：添加的内容。--&amp;gt;&#xD;&#xA;&amp;lt;code&amp;gt;       &amp;lt;!--：标记代码。--&amp;gt;&#xD;&#xA;&amp;lt;meter&amp;gt;      &amp;lt;!--：定义已知范围或分数值内的标量测量。（Internet Explorer 不支持 meter 标签）--&amp;gt;&#xD;&#xA;&amp;lt;progress&amp;gt;    &amp;lt;!--：定义运行中的进度（进程）。--&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;语义化优点：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Advance</title>
      <link>/docs/java-advance/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/java-advance/</guid>
      <description>&lt;h1 id=&#34;面向对象设计实践基于java&#34;&gt;&lt;strong&gt;面向对象设计实践（基于java）&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;caiyi 2021/10/1&lt;/p&gt;&#xA;&lt;p&gt;source：&lt;a href=&#34;https://www.icourse163.org/spoc/course/ECNU-1464731161&#34;&gt;https://www.icourse163.org/spoc/course/ECNU-1464731161&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;期末划考试范围：junit单元测试，第三章文本处理，第四章文件处理，第五章多线程并行（5.4 5.7 5.8很少考 5.9定时任务要考），第六章网络编程（6.6 6.7 6.8不考），第七章数据库编程（7.3不考），第八章（8.1-8.4考的少 只考8.5 8.6）&lt;/p&gt;&#xA;&lt;h1 id=&#34;第一章-maven&#34;&gt;&lt;strong&gt;第一章 Maven&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h3 id=&#34;maven概念&#34;&gt;&lt;strong&gt;Maven概念&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;自动下载和管理jar包，配置build path，存在本地进行管理，编译、测试、运行、和打包发布java项目的构建工具&lt;/p&gt;&#xA;&lt;h3 id=&#34;maven编译工作流程&#34;&gt;&lt;strong&gt;Maven编译工作流程&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001132252.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;maven目录结构&#34;&gt;&lt;strong&gt;Maven目录结构&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001132455.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;maven项目构建流程&#34;&gt;&lt;strong&gt;Maven项目构建流程&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;首先创建maven项目&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001125649.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择 maven project&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001125744.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;勾选 create a simple project&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001125831.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;输入 group id （组织名）、artifact id（作品名/项目名）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001125935.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后在mvn中央仓库搜索工具包的名字&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://mvnrepository.com/&#34;&gt;https://mvnrepository.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001130325.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;选择合适的版本，复制依赖文本&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001130451.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;将依赖文本添加到项目pom.xml中&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001130613.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Maven编译和运行&lt;/p&gt;&#xA;&lt;p&gt;右键项目 → Run As → Maven Build&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001130643.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在Goals输入 clean package → Apply → Run&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001130809.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;编译成功&lt;/p&gt;&#xA;&lt;p&gt;编译过程中他会自动把jar包下载下来&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001130909.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;运行程序&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001131203.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211001131340.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Basic</title>
      <link>/docs/java-basic/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/java-basic/</guid>
      <description>&lt;p&gt;面向对象的三大基本特性：封装、继承、多态&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-java-编译和运行&#34;&gt;1. Java 编译和运行&lt;/h2&gt;&#xA;&lt;img src=&#34;/img/JavaBasic/1.png&#34; width=&#34;700&#34; style=&#34;border-radius: 5px; margin-top: 5px; margin-bottom: 0px;&#34;&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;编写&lt;/strong&gt;：在 VSCode 中编写好代码文件 hello.java&lt;br&gt;&#xA;&lt;strong&gt;编译&lt;/strong&gt;：利用 JDK 中 javac.exe 执行 javac hello.java 命令，将代码文件 (hello.java) 编译为字节码文件 (hello.class)&lt;br&gt;&#xA;&lt;strong&gt;加载&lt;/strong&gt;：利用 JDK 中 java.exe 执行 java hello 命令启动 JVM，JVM 使用类加载器，将字节码文件加载到内存中， JVM 初始化运行时环境，包括堆、栈、方法区等，准备执行 Java 程序&lt;br&gt;&#xA;&lt;strong&gt;JIT生成机器码&lt;/strong&gt;：JVM 的解释器和即时编译器 (JIT Compiler) 来执行字节码。解释器逐行解释字节码，而 JIT 编译器则将热点代码编译成机器码以提高执行效率。JVM 内置的垃圾回收器（Garbage Collector）会自动管理内存，回收不再使用的对象&lt;br&gt;&#xA;&lt;strong&gt;执行&lt;/strong&gt;：机器码在物理 CPU 上执行&lt;/p&gt;&#xA;&lt;img src=&#34;/img/JavaBasic/2.png&#34; width=&#34;600&#34; style=&#34;border-radius: 5px; margin-top: 20px; margin-bottom: 0px;&#34;&gt;&#xD;&#xA;&lt;h2 id=&#34;2-java-基础知识&#34;&gt;2. Java 基础知识&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-基本数据类型&#34;&gt;2.1 基本数据类型&lt;/h3&gt;&#xA;&lt;p&gt;八种基本数据类型：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;数据类型&lt;/th&gt;&#xA;          &lt;th&gt;大小（位）&lt;/th&gt;&#xA;          &lt;th&gt;默认值&lt;/th&gt;&#xA;          &lt;th&gt;表示范围或精度&lt;/th&gt;&#xA;          &lt;th&gt;示例值&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;byte&lt;/td&gt;&#xA;          &lt;td&gt;8&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-128 ~ 127&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;byte b = 10;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;short&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-32,768 ~ 32,767&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;short s = 100;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;int&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;-2³¹ ~ 2³¹-1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;int i = 1000;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;long&lt;/td&gt;&#xA;          &lt;td&gt;64&lt;/td&gt;&#xA;          &lt;td&gt;0L&lt;/td&gt;&#xA;          &lt;td&gt;-2⁶³ ~ 2⁶³-1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;long l = 10000L;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;float&lt;/td&gt;&#xA;          &lt;td&gt;32&lt;/td&gt;&#xA;          &lt;td&gt;0.0f&lt;/td&gt;&#xA;          &lt;td&gt;约 6-7 位小数精度&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;float f = 3.14f;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;double&lt;/td&gt;&#xA;          &lt;td&gt;64&lt;/td&gt;&#xA;          &lt;td&gt;0.0d&lt;/td&gt;&#xA;          &lt;td&gt;约 15 位小数精度&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;double d = 2.718;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;char&lt;/td&gt;&#xA;          &lt;td&gt;16&lt;/td&gt;&#xA;          &lt;td&gt;&amp;lsquo;\u0000&amp;rsquo;&lt;/td&gt;&#xA;          &lt;td&gt;单个 16 位 Unicode 字符&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;char c = &#39;A&#39;;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;boolean&lt;/td&gt;&#xA;          &lt;td&gt;1（逻辑位）&lt;/td&gt;&#xA;          &lt;td&gt;false&lt;/td&gt;&#xA;          &lt;td&gt;true/false&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;boolean b = true;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;22-数据转换&#34;&gt;2.2 数据转换&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;隐式转换：低精度的数据类型转换为高精度的数据，会自动转换，无需显式声明&lt;/li&gt;&#xA;&lt;li&gt;强制转换：高精度的数据类型转换为低精度的数据，需要显式转换，否则编译错误&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// int 自动转换为 long&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// long 自动转换为 float&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// d 被强制转换为 int，结果是 3（小数被截断）&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;23-运算符&#34;&gt;2.3 运算符&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;24-选择结构&#34;&gt;2.4 选择结构&lt;/h3&gt;&#xA;&lt;p&gt;选择结构根据条件的真假决定执行哪部分代码&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Data Structure</title>
      <link>/docs/java-data-structure/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/java-data-structure/</guid>
      <description>&lt;p&gt;import java.util.*;&lt;/p&gt;&#xA;&lt;h1 id=&#34;基础类型相互转换&#34;&gt;基础类型相互转换&lt;/h1&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// int &amp;amp; string&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;parseInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;intValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Integer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// int &amp;amp; char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//a 的 askii码是97&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// string &amp;amp; char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Character&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;toCharArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;array&#34;&gt;Array&lt;/h1&gt;&#xA;&lt;p&gt;定义&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myArray&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intArray&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用Arrrays类进行查找和排序&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Input-Output</title>
      <link>/docs/java-input-output/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/java-input-output/</guid>
      <description>&lt;p&gt;之前刷 leetcode 都是核心代码模式&lt;/p&gt;&#xA;&lt;p&gt;最近在准备面试发现不光要给出实现功能的函数，也要自己构造测试用例输入输出，稍微总结一下用法&lt;/p&gt;&#xA;&lt;h2 id=&#34;输入格式&#34;&gt;&lt;strong&gt;输入格式&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;两种输入格式，在读入数据量大的情况下，格式1的速度会快些&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.io.BufferedReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.io.InputStreamReader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scanner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scanner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BufferedInputStream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.util.Scanner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scanner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scanner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面开始读取&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//相当于 cin &amp;gt;&amp;gt; s;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextDouble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//相当于cin.getline(...);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;判断是否有下一个输入&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hasNextInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hasNextDouble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hasNextLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后记得关闭输出流&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;输出格式&#34;&gt;&lt;strong&gt;输出格式&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;读入多个整数&#34;&gt;&lt;strong&gt;读入多个整数&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Input 输入数据有多组，每组占一行，由一个整数组成&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Sample&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Input&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;56&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;67&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;java.util.Scanner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scanner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Scanner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;hasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//判断是否结束&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;score&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;nextInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//读入整数&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;输入多组整数&#34;&gt;&lt;strong&gt;输入多组整数&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;输入数据有多组，每组占2行，第一行为一个整数N，指示第二行包含N个实数&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Native Interface</title>
      <link>/docs/java-native-interface/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/java-native-interface/</guid>
      <description>&lt;h1 id=&#34;jni-usage&#34;&gt;JNI usage&lt;/h1&gt;&#xA;&lt;h2 id=&#34;介绍和作用&#34;&gt;介绍和作用&lt;/h2&gt;&#xA;&lt;p&gt;JNI 是 Java Native Interface，作用是让 Java 和 C/C++ 之间可以互相调用对方的函数，因为Java是运行在 JVM 上的，而 C/C++ 是本地语言（Native），它们本身不能直接通信，所以需要 JNI 这个中介&lt;/p&gt;&#xA;&lt;h2 id=&#34;为什么java需要调用c函数&#34;&gt;为什么Java需要调用C++函数&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;复用已有的 C/C++ 库&lt;/p&gt;&#xA;&lt;p&gt;比如你已经有个很牛的图像处理库是用 C++ 写的，现在想在 Android App（Java/Kotlin 写的）里用它，就得用 JNI&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;性能要求高的部分用 C/C++ 实现&lt;/p&gt;&#xA;&lt;p&gt;比如视频编解码、图像滤镜这种对速度要求特别高的模块，Java 跑得慢，所以用 C++&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;调用系统底层接口&lt;/p&gt;&#xA;&lt;p&gt;比如 Android 上一些底层系统功能只能用 Native 层的 API，Java 访问不到，只能通过 JNI 间接访问&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;为什么c需要回调java函数&#34;&gt;为什么C++需要回调Java函数&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;当 Java 需要执行一个 C++ 函数时，Java 会调用一个 native 方法&lt;/li&gt;&#xA;&lt;li&gt;而当过程中 C++ 执行一些任务时，它需要访问 Java 的功能（比如 log 方法），这就必须通过 JNI 来实现。因此，C++ 通过 JNI 来间接调用 Java 方法&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;从java调用c函数的流程&#34;&gt;从Java调用C++函数的流程&lt;/h2&gt;&#xA;&lt;p&gt;首先在 java 端定义 native 函数&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript</title>
      <link>/docs/javascript/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/javascript/</guid>
      <description>&lt;h1 id=&#34;一初识js&#34;&gt;&lt;strong&gt;一、初识JS&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;语言特性&#34;&gt;语言特性&lt;/h2&gt;&#xA;&lt;p&gt;程序语言翻译成机器语言，一种是编译，一种是解释&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;编译器&lt;/strong&gt;在代码执行之前编译，生成中间代码文件&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;解释器&lt;/strong&gt;是在运行时进行及时解释，并立即执行&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210802170554.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;运行在客户端的脚本语言，不需要编译，运行过程中由 js 解释器逐行来进行解释并执行&lt;/p&gt;&#xA;&lt;p&gt;现在也可以基于 node.js 技术进行服务器端的编程&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;作用&lt;/strong&gt;：表单动态校验，网页特效，服务端开发，桌面程序，app，物联网，游戏开发&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;浏览器执行JS简介&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;p&gt;渲染引擎：解析HTML/CSS&lt;/p&gt;&#xA;&lt;p&gt;JS引擎：读取网页中的JS代码，对其处理后运行，chorme的V8，执行代码时逐行解释每一句源码&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;JS组成&lt;/strong&gt;：ECMAScript(语法)，DOM(页面文档对象模型)，BOM(浏览器对象模型)&lt;/p&gt;&#xA;&lt;p&gt;ECMAScript&lt;/p&gt;&#xA;&lt;h2 id=&#34;js-的三种写法&#34;&gt;JS 的&lt;strong&gt;三种写法&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;行内样式，可读性差在html中编写JS，不方便阅读&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&#xD;&#xA;    &amp;lt;input type=&amp;#34;button&amp;#34; value=&amp;#34;点我试试&amp;#34; onclick=&amp;#34;alert(&amp;#39;hello world&amp;#39;)&amp;#34;/&amp;gt;&#xD;&#xA;&amp;lt;/body&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;内嵌式，最常用的&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;script&amp;gt; alert(&amp;#39;s沙漠&amp;#39;);&#xD;&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;外部JS文件，中间不可以写代码&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;script src=&amp;#39;my.js&amp;#39;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意：JavaScript中都使用单引号&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt; // (ctrl+/) /**/ (shift+alt+A)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;输入输出语句&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;Untitled%2054daeb4b9ddb46758ece45ae8e06c2c3.csv&#34;&gt;Untitled&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;注意：prompt取过来的值都是字符型的&lt;/p&gt;&#xA;&lt;h2 id=&#34;js-的变量&#34;&gt;&lt;strong&gt;JS 的变量&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;变量是在内存中用于存储数据的容器空间&lt;/p&gt;&#xA;&lt;p&gt;变量的初始化：1.声明 2. 赋值&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var age;&#xD;&#xA;var urname = prompt(&amp;#39;请输入姓名&amp;#39;); // 在弹出的框中输入 caiyi&#xD;&#xA;console.log(urname); //caiyi&#xD;&#xA;alert(urname); //caiyi&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;声明变量的特殊情况&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;Untitled%20020931eae7aa4952a56358fdf8e89f23.csv&#34;&gt;Untitled&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;变量命名规范：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;由字母/数字/下划线/美元符号组成&lt;/p&gt;&#xA;&lt;p&gt;严格区分大小写&lt;/p&gt;&#xA;&lt;p&gt;不能以数字开头，符号只能美元符号/下划线&lt;/p&gt;&#xA;&lt;p&gt;不能是关键字/保留字（var for）&lt;/p&gt;&#xA;&lt;p&gt;变量名必须见名知意/驼峰式命名&lt;/p&gt;&#xA;&lt;h1 id=&#34;二数据类型&#34;&gt;&lt;strong&gt;二、数据类型&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;JavaScript是一种弱类型或者说动态语言，不用提前声明变量类型，在运行过程中自动确定&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux Operation</title>
      <link>/docs/linux-operation/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/linux-operation/</guid>
      <description>&lt;h2 id=&#34;简单&#34;&gt;简单&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 管理员权限操作&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sudo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 进入某个文件夹&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 进入上层目录&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 查看当路径&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;pwd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# ip address&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ifconfig&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 列出文件夹里的所有文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;ls &lt;/span&gt;   &lt;span class=&#34;n&#34;&gt;不包括隐藏文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;ls &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-a&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;包括隐藏文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;把某个文件移动到某个文件夹&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;mv &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 创建文件或文件夹&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;music&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;在当前目录创建目录music&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;touch&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;将test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;的时间改为当前时间&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;文件不存在则新建&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 删除文件或文件夹&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;rm &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;删除文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;rm &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dirname&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;删除空文件夹&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;rm &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-r&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dirname&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;删除非空文件夹&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# java版本&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-version&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# vim 查看文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;编辑退出编辑&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;esc&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;退出&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;退出保存&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wq&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;退出不保存&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 退出&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ctrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;向当前进程发送&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SIGINT&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;信号&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;用于终止一个进程&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ctrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;向当前进程发送&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SIGSTOP&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;信号&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;用于挂起一个进程&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;复杂&#34;&gt;复杂&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 授予执行权限，授予之后会变绿色&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;chmod&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 切换 java 版本&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;update-alternatives&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-config&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-version&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 添加环境变量&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;caiyizhang&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;caiyizhang&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 查看环境变量&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# Linux 下文件颜色的含义&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;蓝色目录&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;绿色可执行文件&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;红色压缩文件&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;浅蓝色链接文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;灰色其它文件&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;红色闪烁链接的文件有问题&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;黄色设备文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# CURL 用来与服务器之间传输数据的工具&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;GET请求&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;curl &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nihao&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;POST请求&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;curl &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;-H&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-X&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-d&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;abc&amp;#34;:123,&amp;#34;bcd&amp;#34;:&amp;#34;nihao&amp;#34;}&amp;#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;URL&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# grep 查找文件里符合条件的字符串或正则表达式&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;grep&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hello&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;txt&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;在文件&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;中查找字符串&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;并打印匹配的行&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# 查找文件 &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-name&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;build.xml&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# apt Ubuntu 中的 Shell 前端软件包管理器&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;列出所有可更新的软件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;upgrade&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;升级软件包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;安装指定的软件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remove&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;package_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;移除指定的软件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>MERN E-Commerce</title>
      <link>/docs/mern-e-commerce/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/mern-e-commerce/</guid>
      <description>&lt;h3 id=&#34;项目简介&#34;&gt;项目简介&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;简历&lt;/p&gt;&#xA;&lt;p&gt;项目介绍：采用 MERN 技术架构 (react全家桶 + nodejs + MongeDB数据库 + Express框架)，包括 Redux 的状态管理方案和 React Router 6 路由管理方案，使用 mongoose 来连接 MongoDB 数据库，实现了产品的完整增删查改操作，分页浏览和模糊搜索，用户的登录注册和信息管理，使用 JWT 身份验证和授权，验证电子邮件，加入购物车和下订单等功能，并把项目部署在 Heroku 上&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Udemy 介绍&lt;/p&gt;&#xA;&lt;p&gt;There are a lot of &amp;ldquo;eCommerce&amp;rdquo; courses out there, but most use some kind of prebuilt plugin or platform. In this course, we will build a completely customized eCommerce / shopping cart application from scratch with the MERN stack with the following functionality&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Object-Oriented Design</title>
      <link>/docs/object-oriented-design/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/object-oriented-design/</guid>
      <description>&lt;h3 id=&#34;第三章-面向对象分析&#34;&gt;&lt;strong&gt;第三章 面向对象分析&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1.1 基本概念&lt;/p&gt;&#xA;&lt;p&gt;面向对象开发需要掌握的极为重要的能力：为软件对象分配职责&lt;/p&gt;&#xA;&lt;p&gt;方法：职责驱动的设计，遵循GRASP原则&lt;/p&gt;&#xA;&lt;p&gt;面向对象分析OOA：发现并描述问题领域里的对象或者概念（概念类）&lt;/p&gt;&#xA;&lt;p&gt;面向对象设计OOD：定义软件对象、以及它们之间如何协作完成功能的（设计类）&lt;/p&gt;&#xA;&lt;p&gt;基本过程：定义用例-&amp;gt;定义领域模型-&amp;gt;定义交互图-&amp;gt;定义设计类图&lt;/p&gt;&#xA;&lt;p&gt;领域模型（概念模型、领域对象模型、分析对象模型）：问题领域的概念类以及真实对象的可视化表示&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925144946.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;低表示差异（LRG）：概念类可以作为软件类，区别是概念类没有操作，软件类有操作。就是说领域模型里面很多的概念类在我们设计的时候可以直接拿来用&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1.2 面向对象分析方法&lt;/p&gt;&#xA;&lt;p&gt;系统开发有两种主要的分析方法：面向功能的分析（抽象层面）、面向对象的分析（模块层面）&lt;/p&gt;&#xA;&lt;p&gt;面向对象分析与结构化分析方法之间的最大差异是：前者根据对象划分系统，而后者根据功能&lt;/p&gt;&#xA;&lt;p&gt;面向对象分析主要步骤：识别对象 → 组织对象 → 定义对象之间的关系 → 定义对象的操作（在设计阶段完成）→ 定义对象内部细节&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;面向对象分析的三种方法：名词法（Conceptual model）、分析模型（Analysis model with stereotypes）、CRC cards&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;21-名词法案例&#34;&gt;&lt;strong&gt;2.1 名词法案例：&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;一般user ➡️ user pannel&lt;/p&gt;&#xA;&lt;p&gt;可能的抉择：一个名词，是作为概念类合适，还是作为某个类的属性更合适？&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925160408.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925160435.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925160719.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;22-分析模型法案例&#34;&gt;&lt;strong&gt;2.2 分析模型法案例：&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;一个健壮、稳定的模型，必须与实现环境无关，实现环境的任何变化，不会影响到系统的逻辑结构&lt;/p&gt;&#xA;&lt;p&gt;分析模型能够关注到系统的&lt;strong&gt;信息、行为、展示（输入/输出）三个维度&lt;/strong&gt;的特性&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925161243.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;分析模型用到三种符号：实体（自身的功能运算存储等）、边界（跟用户打交道输入输出）、控制类（资源调度）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925161330.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925161426.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;上面废品回收机的例子：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;接口对象&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925161855.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;实体对象&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925161915.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;控制对象&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20210925161934.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;23-crc方法标识概念类&#34;&gt;&lt;strong&gt;2.3 CRC方法标识概念类&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;CRC stands for：class 类、responsibilities 职责、collaborations协作&lt;/p&gt;&#xA;&lt;p&gt;CRC索引卡片格式：左边是类和职责，右边是协作类以及父类子类&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012090225.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;CRC特点：非正式的，不是很细节的，需要进一步精化&lt;/p&gt;&#xA;&lt;p&gt;一个简单的例子：分析绘图工具软件&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012091330.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012093113.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;为了寻找crc我们引入了两个技术：头脑风暴，角色扮演&lt;/p&gt;&#xA;&lt;p&gt;CRC案例&lt;/p&gt;</description>
    </item>
    <item>
      <title>Operating System</title>
      <link>/docs/operating-system/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/operating-system/</guid>
      <description>&lt;p&gt;用于记录大二的操作系统课程笔记&lt;/p&gt;&#xA;&lt;h1 id=&#34;1-操作系统结构&#34;&gt;1. 操作系统结构&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;操作系统的概念&lt;/p&gt;&#xA;&lt;p&gt;操作系统是指控制和管理整个计算机系统的硬件和软件资源，并合理地组织调度计算机的工作和资源的分配，以提供给用户和其他软件方便的接口和环境，它是计算机系统中最基本的系统软件&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;操作系统原子性&lt;/p&gt;&#xA;&lt;p&gt;所谓原子操作是指不会被线程调度机制打断的操作，这种操作一旦开始，就一直运行到结束，中间不会有任何线程切换&lt;/p&gt;&#xA;&lt;p&gt;原子操作可以是一个步骤，也可以是多个操作步骤，但是其顺序不可以被打乱，也不可以被切割而只执行其中的一部分，将整个操作视作一个整体是原子性的核心特征&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;两种处理器状态：用户态和核心态&lt;/p&gt;&#xA;&lt;p&gt;**用户态：**用户进程执行所在的状态，运行在用户态下的程序不能直接访问操作系统内核数据结构和程序。内核态与用户态是操作系统的两种运行级别，当程序运行在3级特权级上时，就可以称之为运行在用户态，因为这是最低特权级，是普通的用户进程运行的特权级，大部分用户直接面对的程序都是运行在用户态，比如，应用程序、文件系统、设备驱动&lt;/p&gt;&#xA;&lt;p&gt;**内核态：**内核是计算机配置的底层软件，是操作系统最基本、最核心的部分。操作系统内核执行的状态是受保护的状态，当程序运行在0级特权级上时，就可以称之为运行在内核态。比如，时钟管理、中断处理、原语、进程通信、进程管理、存储器管理、cpu调度、设备管理&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;两种状态的主要区别？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;处于用户态执行时，进程所能访问的内存空间和对象受到限制，其所处于占有的处理机是可被抢占的，运行在用户态下的程序不能直接访问操作系统内核数据结构和程序。而处于核心态执行中的进程，则能访问所有的内存空间和对象，且所占有的处理机是不允许被抢占的&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;为啥要区别？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;是为了区别执行&lt;strong&gt;特权指令&lt;/strong&gt;（启动I/O、内存清零、修改程序状态字、设置时钟、允许/禁止终端、停机）&lt;strong&gt;与非特权指令&lt;/strong&gt;（普通的运算指令、控制转移、算数运算、取数指令、访管指令），在CPU的所有指令中，有一些指令是非常危险的，如果错用，将导致整个系统崩溃。比如：&lt;strong&gt;清内存、设置时钟&lt;/strong&gt;等，如果所有的程序都能使用这些指令就会很危险。所以，CPU将指令分为特权指令和非特权指令，对于那些危险的指令，只允许操作系统及其相关模块使用，普通的应用程序只能使用那些不会造成灾难的指令&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;怎样区分处理器状态？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;用程序状态字寄存器(PSW)中的某标志位来标识当前处理器处于什么状态，0为用户态，1为核心态&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;两者之间如何切换？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;用户态到内核态：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;系统调用：这是用户态进程主动要求切换到内核态的一种方式，用户态进程通过系统调用申请使用操作系统提供的服务程序完成工作，比如fork()实际上就是执行了一个创建新进程的系统调用&lt;/li&gt;&#xA;&lt;li&gt;中断：当外围设备完成用户请求的操作后，会向CPU发出相应的中断信号，这时CPU会暂停执行下一条即将要执行的指令，转而去执行与中断信号对应的处理程序，如果先前执行的指令是用户态下的程序，那么这个转换的过程，自然也就发生了由用户态到内核态的切换。比如硬盘读写操作完成，系统会切换到硬盘读写的中断处理程序中执行后续操作等&lt;/li&gt;&#xA;&lt;li&gt;异常：当CPU在执行运行在用户态下的程序时，发生了某些事先不可知的异常，这时会触发由当前运行进程切换到处理此异常的内核相关程序中，也就转到了内核态，比如缺页异常&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;核心态到用户态：&lt;/p&gt;&#xA;&lt;p&gt;通过执行一个特权指令，将程序状态字(PSW)的标志位设置为“用户态”&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;系统调用 &lt;em&gt;system call&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;系统调用&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;系统调用是操作系统提供给应用程序的接口，应用程序可以发出系统调用请求来获得操作系统的服务。比如，系统中的各种共享资源都由操作系统统一掌管，因此在用户程序中，凡是与资源有关的操作，如存储分配、IO操作、文件管理等，都必须通过系统调用的方式向操作系统提出服务请求，由操作系统代为完成，这样可以保证系统的稳定性和安全性，防止用户进行非法操作&lt;/p&gt;&#xA;&lt;p&gt;系统调用会使处理器从用户态进入核心态，因为系统调用相关处理涉及到对系统资源的管理、对进程的控制，这些功能需要执行一些特权指令才能完成，因此系统调用的相关处理需要在核心态下进行&lt;/p&gt;&#xA;&lt;p&gt;系统调用按照功能分类：设备管理（请求/释放/启动）、文件管理（读/写/创建/删除）、进程控制(创建/撤销/阻塞/唤醒)、进程通信（消息传递/信号传递）、内存管理（分配/回收）&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;系统调用与库函数的区别：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;系统调用是操作系统向上层提供的接口，有的库函数是对系统调用的进一步封装，当今编写的应用程序大多是通过高级语言提供的库函数间接的进行系统调用&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;中断 &lt;em&gt;interrupt&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;中断指计算机 CPU 获知某些事，暂停正在执行的程序，转而去执行处理该事件的程序，当这段程序执行完毕后再继续执行之前的程序。整个过程称为中断，分为内部中断和外部中断&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;内部中断(软中断，异常)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;信号的来源是 CPU 的内部，与当前执行的指令有关&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;**陷阱 trap：**是一种有意而为之的，预先安排的异常事件，一般是在编写程序时故意设下的陷阱指令，而后执行到陷阱指令后，CPU 将会调用特定程序进行相应的处理，处理结束后返回到陷阱指令的下一条指令，比如系统调用，程序调试功能等&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;故障 fault：&lt;strong&gt;故障是由错误条件引起的，在 “引起故障的指令” 被执行但还没有执行结束时发生，由 CPU 检测到的一类的意外事件&lt;/strong&gt;。&lt;strong&gt;出错时交由故障处理程序处理，如果能处理修正这个错误，就将控制返回到引起故障的指令即 CPU 重新执这条指令，如果不能处理就报错。&#xA;常见的故障为&lt;/strong&gt;缺页&lt;/strong&gt;，当 CPU 引用的虚拟地址对应的物理页不存在时就会发生故障。缺页异常是能够修正的，有着、专门的缺页处理程序，它会将缺失的物理页从磁盘中重新调进主存，而后再次执行引起故障的指令时便能够顺利执行了&lt;/li&gt;&#xA;&lt;li&gt;**终止：&lt;strong&gt;执行指令的过程中发生了致命错误，不可修复，程序无法继续运行，只能终止。通常会是一些硬件的错误&lt;/strong&gt;。**终止处理程序不会将控制返回给原程序，而是直接终止原程序，比如整数除0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;外部中断&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;信号的来源是 CPU 的外部，与当前执行的指令无关&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1、可屏蔽中断&lt;/strong&gt;：通过INTR线向CPU请求的中断，主要来自外部设备如硬盘，打印机，网卡等。此类中断并不会影响系统运行，可随时处理，甚至不处理，所以名为可屏蔽中断。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;2、不可屏蔽中断&lt;/strong&gt;：通过NMI线向CPU请求的中断，如电源掉电，硬件线路故障等。这里不可屏蔽的意思不是不可以屏蔽，不建议屏蔽，而是问题太大，屏蔽不了，不能屏蔽的意思。&lt;/p&gt;&#xA;&lt;p&gt;注：INTR和NMI都是CPU的引脚&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Operating%20System%20b64007cc4c3a40a8a2875ae922312902/Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2-进程&#34;&gt;2. 进程&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;进程和进程实体的概念&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;进程（Process）的概念&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;操作系统领域引入多道程序技术之后，为了方便操作系统管理，完成各程序并发执行，引入了进程、线程等概念&lt;/p&gt;</description>
    </item>
    <item>
      <title>Page 01</title>
      <link>/docs/page-01/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/page-01/</guid>
      <description>&lt;p&gt;1234556&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Basic</title>
      <link>/docs/python-basic/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/python-basic/</guid>
      <description>&lt;h1 id=&#34;python&#34;&gt;Python&lt;/h1&gt;&#xA;&lt;p&gt;强类型语言：C/C++/java&lt;/p&gt;&#xA;&lt;p&gt;弱类型语言：js/python&lt;/p&gt;&#xA;&lt;h3 id=&#34;数据结构&#34;&gt;&lt;strong&gt;数据结构&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;常用数据结构 序列、集合、字典&lt;/p&gt;&#xA;&lt;p&gt;python中的数据结构主要有：序列（字符串，元组，列表，范围，字节序列），集合，字典&lt;/p&gt;&#xA;&lt;p&gt;序列：可迭代，元素有序，可以重复出现&lt;/p&gt;&#xA;&lt;p&gt;集合：可迭代，元素无序，不能重复出现&lt;/p&gt;&#xA;&lt;p&gt;字典：可迭代，可变，的K-V对&lt;/p&gt;&#xA;&lt;p&gt;Python没有数组，可以用列表(序列)代替&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;字符串 str&lt;/p&gt;&#xA;&lt;p&gt;索引：a[0]表示第一个，最后一个元素是a[-1]，不能超出范围会有IndexError&lt;/p&gt;&#xA;&lt;p&gt;获取长度函数len()，max返回最后一个元素，min返回第一个元素&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210713111630675.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210713111630675.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;加法和乘法：＋ 把两个字符串连接起来，* 把字符串重复多次&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210713111834377.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210713111834377.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210713111846797.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210713111846797.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;序列切分：从序列中且分出小的序列&lt;/p&gt;&#xA;&lt;p&gt;[start : end]：包括start，不包括end&lt;/p&gt;&#xA;&lt;p&gt;[start : end : step]&lt;/p&gt;&#xA;&lt;p&gt;[0 : 0 : -1]：倒置&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210713112908830.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210713112908830.png&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;元组 tuple&lt;/p&gt;&#xA;&lt;p&gt;不可变序列，一旦创建就不能修改&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;a = (21,32,43,45)&#xD;&#xA;b = (&amp;#39;hello&amp;#39;,&amp;#39;world&amp;#39;)&#xD;&#xA;c = tuple([21,32,43,54])&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果只有一个元素，后面一定要加逗号隔开&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714005401494.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714005401494.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;元组访问和分片，左闭右开：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714005508923.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714005508923.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;元组拆包：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714005648819.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714005648819.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;也可以用*n表示后面剩下所有元素形成一个list列表赋值给n&lt;/p&gt;&#xA;&lt;p&gt;也可以用下划线表示不取哪些元素&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714005737512.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714005737512.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;遍历元组：&lt;/p&gt;&#xA;&lt;p&gt;for循环里的item，只是取出每个元素值&lt;/p&gt;&#xA;&lt;p&gt;但有时需要在遍 历过程中同 获取索引，用到 enumerate() 函数可以获得元组对象，该元组对象有两个元素，一个是索引值，一个是元素值，所以（i, item)  是元组拆包过程&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714080517617.png&#34; alt=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/image-20210714080517617.png&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;列表 list&lt;/p&gt;&#xA;&lt;p&gt;列表具有可变性，可追加、插入、删除和替换中的元素&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;a = [21,32,43,45]&#xD;&#xA;b = [&amp;#39;hello&amp;#39;,&amp;#39;world&amp;#39;]&#xD;&#xA;c = list((21,32,43,54))&#xD;&#xA;a = [10] #一个元素可以不加逗号&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;追加元素：&lt;/p&gt;</description>
    </item>
    <item>
      <title>React js</title>
      <link>/docs/react-js/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/react-js/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/adrianhajdin/portfolio_website&#34;&gt;https://github.com/adrianhajdin/portfolio_website&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.nowcoder.com/issue/tutorial?tutorialId=96&amp;amp;uuid=1678a0fd35cd4db486af18589e34e4d4&#34;&gt;【前端工程师面试宝典】学习说明_互联网校招面试真题面经汇总_牛客网 (nowcoder.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;面试常考题目总结&#34;&gt;面试常考题目总结&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;react 生命周期&lt;/p&gt;&#xA;&lt;p&gt;React 组件的生命周期有三个不同的阶段：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;初始渲染阶段：*这是组件即将开始其生命之旅并进入 DOM 的阶段。&lt;/li&gt;&#xA;&lt;li&gt;更新阶段：*一旦组件被添加到 DOM，它只有在 prop 或状态发生变化时才可能更新和重新渲染。这些只发生在这个阶段。&lt;/li&gt;&#xA;&lt;li&gt;卸载阶段：*这是组件生命周期的最后阶段，组件被销毁并从 DOM 中删除&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;componentWillMount&lt;/strong&gt;&lt;/em&gt;() – 在渲染之前执行，在客户端和服务器端都会执行&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;componentDidMount&lt;/strong&gt;&lt;/em&gt;() – 仅在第一次渲染后在客户端执行。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;componentWillReceiveProps&lt;/strong&gt;&lt;/em&gt;**()** – 当从父类接收到 props 并且在调用另一个渲染器之前调用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;shouldComponentUpdate&lt;/strong&gt;&lt;/em&gt;**()** – 根据特定条件返回 true 或 false。如果你希望更新组件，请返回&lt;strong&gt;true&lt;/strong&gt; 否则返回 &lt;strong&gt;false&lt;/strong&gt;。默认情况下，它返回 false。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;componentWillUpdate&lt;/strong&gt;&lt;/em&gt;**()** – 在 DOM 中进行渲染之前调用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;componentDidUpdate&lt;/strong&gt;&lt;/em&gt;**()** – 在渲染发生后立即调用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;componentWillUnmount&lt;/strong&gt;&lt;/em&gt;**()** – 从 DOM 卸载组件后调用。用于清理内存空间。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;react 的优缺点&lt;/p&gt;&#xA;&lt;p&gt;React的一些主要优点是：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;采用组件化模式，声明式编码，提高开发效率和组件复用率&lt;/li&gt;&#xA;&lt;li&gt;使用虚拟 dom 和优秀的 diffing 算法，尽量减少与真实 dom 的交互&lt;/li&gt;&#xA;&lt;li&gt;使用范围广，可以开发 web 应用，也可以用 react navie 进行移动端开发，还可以用 react 360 进行 VR 开发&lt;/li&gt;&#xA;&lt;li&gt;由于 JSX，代码的可读性很好&lt;/li&gt;&#xA;&lt;li&gt;使用 React，编写UI测试用例变得非常容易&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;React的限制如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>React Native</title>
      <link>/docs/react-native/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/react-native/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.reactnative.cn/docs/textinput&#34;&gt;https://www.reactnative.cn/docs&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;一环境搭建&#34;&gt;一、环境搭建&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;React Native 简介&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;简介：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;React native 是 react 的一个原声扩展，允许我们通过 react 的语法，来开发 ios 和 android 原生应用&lt;/p&gt;&#xA;&lt;p&gt;中文网：https://www.reactnative.cn/&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;React Native&lt;/strong&gt; &lt;strong&gt;的优势：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;开发体验好：用统一的代码规范开发移动端程序，不用关注移动端的差异&lt;/li&gt;&#xA;&lt;li&gt;开发成本低：开发一次，可以生成 Android 和 iOS 两个系统上的 App&lt;/li&gt;&#xA;&lt;li&gt;学习成本低：只要掌握 JavaScript 和 react，就可以进行移动端开发了，否则，Android 这边我们还要学习 kotlin 和 java，ios 这边我们还要学习 swift 和 objective-C&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;React Native&lt;/strong&gt; &lt;strong&gt;的不足：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;不成熟：项目版本和api更新频繁，学习成本高。有些问题较少解决方案，试错成本高&lt;/li&gt;&#xA;&lt;li&gt;性能差：整体性能仍然不如原生&lt;/li&gt;&#xA;&lt;li&gt;兼容性差：涉及底层的功能，需要针对 Android 和 iOS 双端单独开发&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;移动端 app 的开发模式：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled%201.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;跨平台框架的比较：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;Untitled%202.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;基础环境的搭建&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安装 node.js，版本应该大于 12&lt;/p&gt;&#xA;&lt;p&gt;安装完之后可以配置国内的镜像，这样以后运行会快一些&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;registry&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//registry.npm.taobao.org&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安装 yarn&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;yarn&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安装 react native 脚手架&lt;/p&gt;</description>
    </item>
    <item>
      <title>Software Testing</title>
      <link>/docs/software-testing/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/software-testing/</guid>
      <description>&lt;h1 id=&#34;二代码单元测试&#34;&gt;&lt;strong&gt;二、代码单元测试&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;动态的代码测试：在开发环境中，通过运行被测代码，验证其是否满足期望目标，尽早发现与目标不一样的缺陷&lt;/p&gt;&#xA;&lt;p&gt;面向代码的动态测试分为两类：代码单元测试、代码接口测试&lt;/p&gt;&#xA;&lt;p&gt;单元测试和集成测试的区别：一个是规模，以测试执行速度的快慢来界定，不超过0.1s。另一个是独立性，单元测试不能有任何外部资源的依赖，用到了测试替身&lt;/p&gt;&#xA;&lt;p&gt;测试替身（Test Double）：替代真实代码中依赖于数据库、网络和文件系统的代码，只有形没有内容，是假的东西&lt;/p&gt;&#xA;&lt;p&gt;单元：功能相对独立、规模较小的代码&lt;/p&gt;&#xA;&lt;p&gt;按照软件测试技术发展规律，我们面向代码测试内容讲解分成两大部分：测试技术，测试生成&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211011211107.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1逻辑覆盖准则&#34;&gt;&lt;strong&gt;1.逻辑覆盖准则&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;逻辑测试：以代码中逻辑表达式结构为对象的测试，以期发现代码逻辑结构缺陷&lt;/p&gt;&#xA;&lt;p&gt;逻辑结构缺陷：写代码时所犯错误在逻辑表达式上的可视化体现；逻辑表达式写错了，程序行为不正确&lt;/p&gt;&#xA;&lt;p&gt;逻辑表达式缺陷类型DNF：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211011212109.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;基于&lt;strong&gt;逻辑覆盖准则&lt;/strong&gt;的测试（Logical Coverage Criteria）：用于衡量代码中逻辑表达式被测试的充分程度&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211011211723.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;下图中的蓝色箭头表示A包含B，意思是B能够发现的缺陷一定可以被A发现，满足上面就一定满足下面的意思，但是判定覆盖和条件覆盖比较特殊&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211011211620.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;满足逻辑覆盖准则 ≠ 高质量测试&lt;/p&gt;&#xA;&lt;p&gt;高质量测试是发现高质量缺陷的测试&lt;/p&gt;&#xA;&lt;h3 id=&#34;语句覆盖statement-coverage&#34;&gt;&lt;strong&gt;语句覆盖Statement Coverage&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;用来衡量被测代码中的语句得到执行的程度，如果测试集合能够使得被测代码中的每条语句至少被执行一次，那么则说该测试集合满足了语句覆盖&lt;/p&gt;&#xA;&lt;p&gt;语句覆盖度：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012194914.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;语句覆盖测试案例：&lt;/p&gt;&#xA;&lt;p&gt;语句覆盖是定义在源代码上的，所以看的是源代码&lt;/p&gt;&#xA;&lt;p&gt;可以在测试集合中增加多个测试用例使语句覆盖度达到100%，如例3&lt;/p&gt;&#xA;&lt;p&gt;在逻辑测试当中，语句覆盖是最低级的，因为它只是把每个语句走了一遍，并没有去测试什么逻辑，如果把 if 里面的 &amp;amp;&amp;amp; 改成 || 语句覆盖无法揭示错误&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012195850.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;判定覆盖decision-coverage&#34;&gt;&lt;strong&gt;判定覆盖Decision Coverage&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;衡量代码中的&lt;strong&gt;判定得到执行的程度&lt;/strong&gt;，如果测试集合能够使得被测代码中的每个判定至少被执行一次（指每个判定的所有可能结果都至少出现一次，例如 if((num1&amp;gt;1)&amp;amp;&amp;amp;(num2==0)) 的真假结果都得到执行，才认为该判定被执行），那么则说该测试集合满足了判定覆盖&lt;/p&gt;&#xA;&lt;p&gt;条件：不含布尔算子（与或非）的逻辑表达式，例如关系表达式、布尔变量等&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012211604.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;判定：一个或者多个条件通过一个或多个布尔算子连接起来的逻辑表达式&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012211606.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;判定覆盖度：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012201038.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;判定覆盖测试案例：&lt;/p&gt;&#xA;&lt;p&gt;注意指每个判定的真和假结果都至少出现一次，才叫做执行了&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/typora/20211012201203.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;判定覆盖的缺点：主要看的是逻辑操作符用的对，逻辑操作符用的对不代表逻辑就对，不一定能发现条件缺陷，如果把 num &amp;gt; 1 写成了 num &amp;gt; -1，则不能揭示错误&lt;/p&gt;&#xA;&lt;p&gt;注意&lt;strong&gt;短路操作符&lt;/strong&gt; &amp;amp;&amp;amp; 和 ||，即当出现了false或true就不走了，MC/DC准则产生的原因，所以上个例子正确的结果表格应该是&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://caiyiimg.oss-cn-shanghai.aliyuncs.com/2021/10/12/16340489956030.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;条件覆盖-condition-coverage&#34;&gt;&lt;strong&gt;条件覆盖 Condition Coverage&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;衡量代码中构成判定的各个条件得到执行的程度，如果测试集合能够使得被测代码中的每个条件至少被执行一次，那么则说该测试集合满足了条件覆盖&lt;/p&gt;</description>
    </item>
    <item>
      <title>Video Compression</title>
      <link>/docs/video-compression/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/video-compression/</guid>
      <description>&lt;h1 id=&#34;video-compression-tech-in-teams&#34;&gt;Video Compression Tech in Teams&lt;/h1&gt;&#xA;&lt;p&gt;讲视频压缩技术&lt;/p&gt;&#xA;&lt;h2 id=&#34;视频压缩的必要性&#34;&gt;视频压缩的必要性&lt;/h2&gt;&#xA;&lt;p&gt;一个视频一秒钟不压缩的内存是 710 MB，相当于带宽需要 710 Mbps，编码之后的带宽是 2-10 Mbps，视频压缩的目的就是可以用尽量少的带宽，传送更高质量的图像&lt;/p&gt;&#xA;&lt;p&gt;YUV420: 表示有 YUV 三个分量，每个像素有一个亮度分量，有 1/4 个 U 分量和 1/4 个 V 分量&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;视频压缩技术&#34;&gt;视频压缩技术&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image%201.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;带宽有限的情况下，对运动的图像 (high motion, people video) 分辨率降低，对静态的图像 (low motion, vbss share ppt) 帧率降低，最低 1.75&lt;/li&gt;&#xA;&lt;li&gt;给调整过后的图像编码，编成更少的带宽，在接收端再解码&lt;/li&gt;&#xA;&lt;li&gt;Encoder 都是基于块的&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Devide, 把一个图像分为一些大小相等的块，比如说 H264 里面宏块的大小就是 16x16，但是 H265 里面就变成了 64x64，就可以适用于更大的图像比如 4K 之类的&lt;/li&gt;&#xA;&lt;li&gt;Prediction, 把块拿出来之后就会进行一个预测，分为帧内预测，也有可能是帧间预测，把预测块和当前的块一减就会得到一个差值，这个差就会更小&lt;/li&gt;&#xA;&lt;li&gt;Transform/Quantization, 把这个差经过变换和量化的技术，起到了压缩的目的&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Decoder 这边是相反的，先解码，然后反量化，反变换，再根据编码传过来的预测信息重建预测块，就把这个图像复原了。复原以后，因为他在量化或者预测的过程中可能会失真，引起一些块效应。所以再最后解码的部分他又加上了 deblocking 这个滤波，然后 H265 里面他又加上了 SAO 这种算法，为了这个图像主观看上去更好一些&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image%202.png&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;H264或者H265 他们都有 I/B/P 帧，把图像分为 GOP ( group of pictures)，在一个 GOP 里面会有一些头信息，然后再加上 IDR 帧，P 帧只能向前参考，只能参考它前面的帧，B 帧前后的帧都可以参考。因为我们 Teams 是实时的，所以一般不用 B 帧，只用 P 帧，都是 I P P P P 这样的&lt;/p&gt;</description>
    </item>
    <item>
      <title>Video Knowledge</title>
      <link>/docs/video-knowledge/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/video-knowledge/</guid>
      <description>&lt;h1 id=&#34;video-development&#34;&gt;Video development&lt;/h1&gt;&#xA;&lt;h1 id=&#34;domin-knowledge&#34;&gt;Domin Knowledge&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;语言基础  C, C++, Java, JNI&lt;/li&gt;&#xA;&lt;li&gt;视频图像基础  MP4 格式, YUV 格式, FLV 格式, IBP 帧，常见的性能指标&lt;/li&gt;&#xA;&lt;li&gt;音视频传输协议  WebRTC, RTP, RTCP, RTSP, RTMP, UDP&lt;/li&gt;&#xA;&lt;li&gt;视频编解码协议  H264, H265, AAC, AV1, VP9, Opus, HEVC&lt;/li&gt;&#xA;&lt;li&gt;开源多媒体处理框架  FFMpeg, x264&lt;/li&gt;&#xA;&lt;li&gt;客户端多媒体相关sdk  Android camera 2, Media codec, iOS AV foundation, Media Capture, Media Foundation, Direct Show, OpenGL ES, GPU Image, Metal&lt;/li&gt;&#xA;&lt;li&gt;客户端开发  Android native, iOS native, Xamarin&lt;/li&gt;&#xA;&lt;li&gt;音视频质量优化  jitter buffer, SVC, GCC, FEC, simulcast&lt;/li&gt;&#xA;&lt;li&gt;找一个实战项目，包含以下功能&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;功能 list&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vue js</title>
      <link>/docs/vue-js/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>/docs/vue-js/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_45659769/article/details/119564784&#34;&gt;vue面试题整理(2022-持续更新中&amp;hellip;)_老古懂的博客-CSDN博客_vue面试题&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/260150638&#34;&gt;2020秋招前端面经知识点汇总(二) Vue部分 - 知乎 (zhihu.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/qq_44182284/article/details/111191455?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-111191455-blog-119564784.pc_relevant_multi_platform_whitelistv1_exp2&amp;amp;spm=1001.2101.3001.4242.1&amp;amp;utm_relevant_index=3&#34;&gt;(173条消息) 2021年Vue最常见的面试题以及答案（面试必过）_前端探险家的博客-CSDN博客_vue面试题&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;&#xA;&lt;h2 id=&#34;basic&#34;&gt;Basic&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;介绍 Vue&lt;/p&gt;&#xA;&lt;p&gt;是一套用于构建用户界面的渐进式JavaScript框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合&lt;/p&gt;&#xA;&lt;p&gt;解释渐进式：vue 允许你将一个网页分割成可复用的组件，每个组件都包含属于自己的 HTML、CSS、JAVASCRIPT 以用来渲染网页中相应的地方。对于 VUE 的使用可大可小，它都会有相应的方式来整合到你的项目中。所以说它是一个渐进式的框架。VUE 是响应式的（reactive）这是VUE 最独特的特性，也就是说当我们的数据变更时，VUE 会帮你更新所有网页中用到它的地方&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Vue 2.0 和 Vue3.0 的区别&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.yisu.com/zixun/729240.html#:~:text=%E5%8C%BA%E5%88%AB%EF%BC%9A1%E3%80%81vue2%E7%9A%84%E5%8F%8C%E5%90%91%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E5%88%A9%E7%94%A8%E4%BA%86ES5%E7%9A%84API%20Object.definePropert%20%28%29%EF%BC%8C%E8%80%8Cvue3%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%BA%86es6%E7%9A%84API,Proxy%EF%BC%9B2%E3%80%81Vue3%E6%94%AF%E6%8C%81%E7%A2%8E%E7%89%87%EF%BC%8C%E8%80%8Cvue2%E4%B8%8D%E6%94%AF%E6%8C%81%EF%BC%9B3%E3%80%81%20Vue2%E4%BD%BF%E7%94%A8%E9%80%89%E9%A1%B9%E7%B1%BB%E5%9E%8BAPI%EF%BC%8C%E8%80%8CVue3%E4%BD%BF%E7%94%A8%E5%90%88%E6%88%90%E5%9E%8BAPI%EF%BC%9B4%E3%80%81%E5%BB%BA%E7%AB%8B%E6%95%B0%E6%8D%AE%EF%BC%8Cvue2%E6%8A%8A%E6%95%B0%E6%8D%AE%E6%94%BE%E5%85%A5data%E5%B1%9E%E6%80%A7%E4%B8%AD%EF%BC%8C%E8%80%8CVue3%E4%BD%BF%E7%94%A8setup%20%28%29%E6%96%B9%E6%B3%95%EF%BC%9B5%E3%80%81vue3%E6%9C%89Teleport%E7%BB%84%E4%BB%B6%EF%BC%8Cvue2%E6%B2%A1%E6%9C%89%E3%80%82&#34;&gt;vue2和vue3的区别有哪些 - web开发 - 亿速云 (yisu.com)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;区别：1、vue2的双向数据绑定利用了ES5的API Object.definePropert()，而vue3中使用了es6的API Proxy；2、Vue3支持碎片，而vue2不支持；3、 Vue2使用选项类型API，而Vue3使用合成型API；4、建立数据，vue2把数据放入data属性中，而Vue3使用setup()方法；5、vue3有Teleport组件，vue2没有。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Vuex 使用情景&lt;/p&gt;&#xA;&lt;p&gt;vuex 是一个专为 vue.js 应用程序开发的状态管理模式&lt;/p&gt;&#xA;&lt;p&gt;可以理解为把需要&lt;strong&gt;多个组件共享的变量&lt;/strong&gt;全部存储在一个对象里面，把这个对象放在顶层的 vue 实例当中，让其他组件可以使用，可以想象成是一个单例对象&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用情景：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大型开发，多个界面间的共享问题&lt;/li&gt;&#xA;&lt;li&gt;比如用户的登录状态、拿到和保存 token、用户名称、头像、地理位置信息等等&lt;/li&gt;&#xA;&lt;li&gt;比如商品的收藏、购物车中的物品（在很多页面都有添加购物车的功能）&lt;/li&gt;&#xA;&lt;li&gt;这些状态信息，我们都可以放在统一的地方，对它进行保存和管理，而且它们还是响应式的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;简单使用：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;创建一个 store 文件夹，首先在 index.js 里定义四个东西： state, getters, mutations, actions&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;介绍 Vuex&lt;/p&gt;&#xA;&lt;p&gt;Vuex 是一个专为 Vue.js 应用程序开发的&lt;strong&gt;状态管理模式&lt;/strong&gt;。它采用&lt;strong&gt;集中式存储&lt;/strong&gt;，管理应用的所有组件的状态，Vuex 可以帮助我们管理共享状态，并附带了更多的概念和框架。这需要对短期和长期效益进行权衡。如果您不打算开发大型单页应用，使用 Vuex 可能是繁琐冗余的。确实是如此——如果您的应用够简单，您最好不要使用 Vuex&lt;/p&gt;</description>
    </item>
    <item>
      <title>America Seattle</title>
      <link>/life/america/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/life/america/</guid>
      <description></description>
    </item>
    <item>
      <title>America Seattle</title>
      <link>/life/beijing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/life/beijing/</guid>
      <description></description>
    </item>
    <item>
      <title>America Seattle</title>
      <link>/life/changsha/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/life/changsha/</guid>
      <description></description>
    </item>
    <item>
      <title>America Seattle</title>
      <link>/life/changsha2024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/life/changsha2024/</guid>
      <description></description>
    </item>
    <item>
      <title>America Seattle</title>
      <link>/life/fuzhou/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/life/fuzhou/</guid>
      <description></description>
    </item>
    <item>
      <title>Page 02</title>
      <link>/docs/page-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/docs/page-02/</guid>
      <description>&lt;p&gt;344&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
